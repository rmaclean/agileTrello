!function(){"use strict";var app=angular.module("agileTrello",["ngRoute","LocalStorageModule","atTrello","atWITBadges","atTriforce","n3-line-chart"]);app.config(["$routeProvider",function($routeProvider){var endOfController=window.location.hash.indexOf("/",3);-1===endOfController&&(endOfController=window.location.hash.length);var controller=window.location.hash.substring(2,endOfController)+"Controller";$routeProvider.when("/:controller",{controller:controller,templateUrl:function(rp){return"/app/"+rp.controller+"/view.html"}}).otherwise({redirectTo:"/home"})}])}(),function(){"use strict";angular.module("atWITBadges",[]).directive("atWitbadge",function(){return{templateUrl:"/app/directives/agileBadges.html",restrict:"E",scope:{item:"=info"}}})}(),function(){"use strict";angular.module("atTriforce",[]).directive("triforce",function(){return{restrict:"ACE",scope:{triforceorder:"@",triforcevalue:"@"},link:function(scope,element){var positive="green",negative="red";"POSITIVE"!==scope.triforceorder.toLocaleUpperCase()&&(positive="red",negative="green"),0!==+scope.triforceorder&&element.addClass(+scope.triforcevalue>0?positive:negative)}}})}(),function(){"use strict";function homeController($scope,$http,$trello){function onAuth(){$scope.loadingBoards=!0,$trello.get("members/me/boards","",gotBoards)}function gotBoards(boards){$scope.boards=[],boards.forEach(function(board){board.closed||$scope.boards.push(board)})}function setMembers(memberIds){if(!memberIds)return[];var result=[];return memberIds.forEach(function(memberId){members.forEach(function(sourceMember){sourceMember.id===memberId&&result.push(sourceMember)})}),result}function listsDone(listInfos){config.languagePlanned&&($scope.language.planned=config.languagePlanned),config.hideDoubleZero&&listInfos.forEach(function(list){0===list.estimate&&0===list.used&&listInfos.splice(listInfos.indexOf(list),1)});var max=0;listInfos.forEach(function(list){list.cards.sort(function(a,b){return a.position-b.position}),list.info.cards=list.cards.length,list.info.avgEstimate=list.estimate/list.cards.length,list.info.avgUsed=list.used/list.cards.length,list.info.difference=list.estimate-list.used,list.info.avgDifference=list.info.avgEstimate-list.info.avgUsed,max=list.cards.length>max?list.cards.length:max,list.info.isSprintList&&($scope.sprintUsageData.push({x:$scope.sprintUsageData.length,val_0:list.used,val_1:list.estimate}),$scope.sprintAvgData.push({x:$scope.sprintAvgData.length,val_0:list.info.avgUsed,val_1:list.info.avgEstimate})),$scope.sprintUsageOptions.axes.x.ticks=$scope.sprintUsageData.length}),config.cleanCardTitles&&listInfos.forEach(function(list){list.cards.forEach(function(card){card.name=card.name.replace(identifyEstimateRegEx,"").replace(identifyUsedRegEx,"")})}),config.cleanListTitles&&listInfos.forEach(function(list){list.name=list.name.replace(identifySprintTitlePlanned,"")}),config.sprintLength&&(listInfos.forEach(function(list){list.info.plannedPerDay=list.info.planned/config.sprintLength,list.info.sprintLength=config.sprintLength,list.info.pointsPerDayUsed=list.used/config.sprintLength,list.info.pointsPerDayEstimate=list.estimate/config.sprintLength,list.info.differencePerDay=list.info.pointsPerDayEstimate-list.info.pointsPerDayUsed,list.info.isSprintList&&$scope.sprintPerDayData.push({x:$scope.sprintPerDayData.length,val_0:list.info.pointsPerDayUsed,val_1:list.info.pointsPerDayEstimate})}),config.startDate&&listInfos.forEach(function(list){if(list.info.sprintNumber){var startDate=moment(config.startDate),sprintStartDate=startDate.add((list.info.sprintNumber-1)*config.sprintLength,"d");list.info.sprintStartDate=sprintStartDate.format("ddd, D MMM YYYY"),list.info.sprintEndDate=sprintStartDate.add(config.sprintLength-1,"d").format("ddd, D MMM YYYY")}})),listInfos.sort(function(a,b){return a.position-b.position});for(var rows=[],i=0;max>i;i++)rows.push(i);$scope.lists.lists=listInfos,$scope.lists.rows=rows}function processList(list){var listInfo={name:list.name,id:list.id,estimate:0,used:0,cards:[],position:list.pos,info:{unexpectedCards:0,unexpectedWork:0,isSprintList:!1},hide:{planned:!1,unexpected:!1},dailyBreakdown:{}},sprintTitleInfo=identifySprintTitles.exec(list.name);return sprintTitleInfo&&(void 0===sprintTitleInfo[3]?listInfo.hide.planned=!0:listInfo.info.planned=sprintTitleInfo[3],void 0!==sprintTitleInfo[1]&&(listInfo.info.sprintNumber=sprintTitleInfo[1],listInfo.info.isSprintList=!0)),"BACKLOG"==list.name.toLocaleUpperCase()&&(listInfo.hide.planned=!0,listInfo.hide.unexpected=!0),"SPRINT BACKLOG"==list.name.toLocaleUpperCase()&&(listInfo.hide.planned=!0),"IN PROGRESS"==list.name.toLocaleUpperCase()&&(listInfo.hide.planned=!0),listInfo}function getList(lists,id){var list=null;return lists.forEach(function(_list){return _list.id===id?void(list=_list):void 0}),list}function getPoints(card){var points={validUsed:!1,validEstimate:!1,used:0,estimated:0},estimates=identifyEstimateRegEx.exec(card.name);null!==estimates&&(points.validEstimate=!0,points.estimated=+estimates[1]);var useds=identifyUsedRegEx.exec(card.name);return null!==useds&&(points.validUsed=!0,points.used=+useds[1]),points}function processCard(lists,card){var list=getList(lists,card.idList);if(null!==list){if("agileTrello Config"===card.name)return void(config=JSON.parse(card.desc));var cardInfo={name:card.name,estimate:0,used:0,position:card.pos,url:card.url,members:setMembers(card.idMembers)},points=getPoints(card);points.validEstimate&&(list.estimate+=points.estimated,cardInfo.estimate=points.estimated),points.validUsed&&(list.used+=points.used,cardInfo.used=points.used),0===cardInfo.estimate&&cardInfo.used>0&&(list.info.unexpectedCards++,list.info.unexpectedWork+=cardInfo.used),cardInfo.difference=card.used-card.estimate,list.cards.push(cardInfo)}}function getBreakdown(list,date){var breakDown=null;for(var name in list.dailyBreakdown)if(list.dailyBreakdown.hasOwnProperty(name)&&name===date){breakDown=list.dailyBreakdown[name];break}return null===breakDown&&(breakDown={used:0,estimates:0}),breakDown}function processActions(lists,actions){actions.forEach(function(action){if("createCard"===action.type){var points=getPoints(action.data.card);if(points.validEstimate||points.validUsed){var list=getList(lists,action.data.list.id);if(list){var date=(+moment(action.date).startOf("day")).toString(),breakDown=getBreakdown(list,date);points.validEstimate&&(breakDown.estimates+=points.estimated),points.validUsed&&(breakDown.used+=points.used),list.dailyBreakdown[date]=breakDown}}}})}function getActions(actions){0!==actions.length&&(actionsCount++,$trello.get("/batch","urls="+actions,gotActions))}function gotBoard(board){members=board.members,listInfos=[],board.lists.forEach(function(list){listInfos.push(processList(list))}),actionsCount=0;var actions="";board.cards.forEach(function(card){processCard(listInfos,card),actions.length>0&&(actions+=","),actions+="/cards/"+card.id+"/actions?filter=createCard%26limit=1000,/cards/"+card.id+"/actions?filter=updateCard%26limit=1000",actions.length>1800&&(getActions(actions),actions="")}),getActions(actions)}function gotActions(batchActions){if(actionsCount--,0===actionsCount){for(var cardIndex=0;cardIndex<batchActions.length;cardIndex++){var actions=batchActions[cardIndex][200];processActions(listInfos,actions)}listsDone(listInfos)}}function loadBoard(){null!==$scope&&null!==$scope.selectedBoard&&($scope.loadingBoards=!0,$scope.lists={},config={},$trello.get("/boards/"+$scope.selectedBoard.id,"fields=name&cards=open&card_fields=idList,url,pos,name,idMembers,desc&members=all&member_fields=fullName,url&lists=open&list_fields=name,pos",gotBoard))}$scope.boards=[],$scope.loadingBoards=!1,$scope.lists={},$scope.trello=$trello.info,$scope.selectedBoard=null,$scope.language={planned:"Planned"},$scope.sprintUsageData=[],$scope.sprintAvgData=[],$scope.sprintPerDayData=[],$scope.sprintUsageOptions={series:[{y:"val_0",label:"Points Used",color:"#f18bbd",type:"area",axis:"y",id:"series_0",striped:!0},{y:"val_1",label:"Points Estimated",color:"#ae8bf1",type:"line",axis:"y",id:"series_1",striped:!0}],stacks:[],axes:{x:{type:"linear",key:"x",labelFunction:function(value){return"sprint "+ +($scope.sprintUsageOptions.axes.x.ticks-value)}},y:{type:"linear"}},lineMode:"linear",tension:.7,tooltip:{mode:"scrubber"},drawLegend:!0,drawDots:!0,columnsHGap:5};var config={},identifyEstimateRegEx=/\(([\d\.]+)\)/,identifyUsedRegEx=/.\[([\d\.]+)\]/,identifySprintTitles=/^Sprint\s(\d+)(\s\(planned\s(\d+)\))?/,identifySprintTitlePlanned=/\(planned\s(\d+)\)/,members=[],listInfos=[],actionsCount=0;$scope.refresh=function(){loadBoard()},$scope.logout=function(){$trello.logout()},$scope.loginToTrello=function(){$trello.login(onAuth)},$scope.$watch("selectedBoard",function(){loadBoard()}),$trello.info.key="bb052cd140194b3333e4661db7d4afe9",$trello.info.appName="agileTrello",$trello.isAuthenticated()&&onAuth()}angular.module("agileTrello").controller("homeController",["$scope","$http","$trello",homeController])}(),function(){"use strict";angular.module("atTrello",["LocalStorageModule"]).factory("$trello",["$http","localStorageService",function($http,localStorageService){function buildUrl(path,params){"/"!==path[0]&&(path="/"+path);var auth="key="+factory.info.key+"&token="+factory.info.token;return auth=path.indexOf("?",0)>0?"&"+auth:"?"+auth,params&&"&"!==params[0]&&(params="&"+params),_urlBase+_version+path+auth+params}function gotAuthWindowMessage(event){event.data&&(localStorageService.set("trelloToken",event.data),factory.info.token=event.data,factory.info.authenticated=!!event.data,event.source.close(),window.removeEventListener("message",gotAuthWindowMessage,!1),_onAuth())}var _version=1,_urlBase="https://api.trello.com/",_onAuth=null,factory={info:{authenticated:!1,key:"",token:"",appName:""}};return factory.login=function(onAuth){if(this.isAuthenticated())return void onAuth();_onAuth=onAuth;var width=633,height=611,left=window.screenX+(window.innerWidth-width)/2,top=window.screenY+(window.innerHeight-height)/2,url="https://trello.com/"+_version+"/authorize?key="+factory.info.key+"&response_type=token&name="+factory.info.appName+"&expiration=30days&callback_method=postMessage&scope=read&return_url="+window.location.origin;window.addEventListener("message",gotAuthWindowMessage,!1),window.open(url,"trelloPopup","location=no,menubar=no,resizable=yes,scrollbars=yes,status=no,toolbar=no,width="+width+",height="+height+",left="+left+",top="+top)},factory.logout=function(){localStorageService.remove("trelloToken"),factory.info.token="",factory.info.authenticated=!1},factory.get=function(path,params,data){var url=buildUrl(path,params);$http.get(url).success(function(_data){data(_data)})},factory.isAuthenticated=function(){return factory.info.token=localStorageService.get("trelloToken"),factory.info.authenticated=!!factory.info.token,factory.info.authenticated},factory}])}();
//# sourceMappingURL=all.min.js.map